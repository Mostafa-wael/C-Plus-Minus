Lex(1) inline comment: // Addition operation
Lex(2) data type: int
Lex(2) identifier: x
Lex(2) end Of Statement: ; 

Lex(3) data type: int
Lex(3) identifier: y
Lex(3) punctuators: =
Lex(3) int value: 7
Quads() push 7
Lex(3) end Of Statement: ; 

Quads() pop y

Lex(4) command: print
Lex(4) punctuators: (
Lex(4) identifier: y
Lex(4) punctuators: )
Quads() push y
7
Lex(4) end Of Statement: ; 

Lex(5) identifier: x
Lex(5) punctuators: =
Lex(5) int value: 9
Quads() push 9
Lex(5) arithmtic operator: +
Lex(5) identifier: y
Lex(5) end Of Statement: ; 

Quads() push y
Quads() ADD
Quads() pop x

Lex(6) data type: int
Lex(6) identifier: z
Lex(6) punctuators: =
Lex(6) identifier: x
Lex(6) arithmtic operator: -
Quads() push x
Lex(6) identifier: y
Lex(6) arithmtic operator: +
Quads() push y
Quads() SUB
Lex(6) identifier: x
Lex(6) arithmtic operator: +
Quads() push x
Quads() ADD
Lex(6) punctuators: (
Lex(6) int value: 2
Quads() push 2
Lex(6) arithmtic operator: *
Lex(6) int value: 3
Quads() push 3
Quads() MUL
Lex(6) punctuators: )
Lex(6) end Of Statement: ; 

Quads() ADD
Quads() pop z


